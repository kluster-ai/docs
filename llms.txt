# kluster.ai

> kluster.ai provides the technology to verify and trust AI responses in real time. Developers can validate outputs, detect hallucinations, and ensure response reliability across any model, with minimal integration effort.

## How to Use This File

This file is intended for AI models and developers. Use it to:
- Understand project architecture and follow builder guides (see Docs)
- Access source code (see Source Code Repos)
- Explore optional resources (see Optional)

## Metadata
- Documentation pages: 15
- Source repositories: 2
- Optional resources: 0

## Docs
This section lists documentation pages. Each entry includes the page title, a direct link to the raw Markdown file, and a short description. Use this section to answer questions about core functionality, architecture, and features. If a question is about how or why something works, check here first.
- [Overview of Verify](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/overview.md): Learn more about the Verify service, a trust layer for AI stacks that provides a set of features to validate LLM outputs in real-time.
- [Get a kluster.ai API key](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/get-api-key.md): Follow step-by-step instructions to generate and manage API keys, enabling secure access to kluster's services and seamless integration with your applications.
- [Compatibility with OpenAI client libraries](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/openai-compatibility.md): Learn how kluster.ai is fully compatible with OpenAI client libraries, enabling seamless integration with your existing applications.
- [Code Verification Using Verify](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/overview.md): Learn how to use kluster.ai code verification to detect bugs and security issues in AI-generated code using kluster.ai's specialized Verify.
- [Get started with Verify Code](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/quickstart.md): Set up kluster.ai Code verification in minutes. Scan AI-generated code for errors, vulnerabilities, and performance issues with Cursor and AI assistants.
- [tools](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/tools.md): No description available.
- [MCP Compatible IDEs](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/integrations/mcp.md): Manual setup guide for Windsurf, Cline, Roo Code, Kilo Code and other MCP-compatible IDEs to use kluster.ai Verify Code.
- [Native IDE Integration](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/integrations/native.md): One-click installation for Cursor, VS Code, and Claude Code with enhanced Verify Code features and custom extensions.
- [cursor-firebase-nextjs](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/examples/cursor-firebase-nextjs.md): No description available.
- [vscode-admin-endpoint](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/code/examples/vscode-admin-endpoint.md): No description available.
- [Reliability quick start](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/quickstart/reliability.md): Get started with kluster.ai's reliability verification in under 5 minutes. Detect hallucinations and validate AI responses with a simple API call.
- [Verify API endpoint](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/reliability/verify-api.md): Validate the reliability of question-answer pairs using kluster.ai API, with or without context, to detect hallucinations and ensure response accuracy.
- [Reliability by Verify](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/reliability/overview.md): Learn how to use kluster.ai reliability verification and prevent unreliable content in your applications using kluster.ai's specialized Verify.
- [Workflow Integrations](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/reliability/workflow-integrations.md): Easily integrate Verify into Dify, n8n, and more with ready-made workflows to automate AI response validation via API in minutes.
- [Chat completion Verify API](https://raw.githubusercontent.com/kluster-ai/docs/refs/heads/main/verify/reliability/chat-completion.md): Validate full chat conversations for reliability using the kluster.ai chat completion endpoint. Analyze context and detect misinformation.

## Source Code Repos
Frequently used source code repositories essential for working with this project. Each entry includes the repository name, GitHub URL, and a short description of what the repo contains or enables. These repositories contain the source code referenced by these docs. Use them for API references, code examples, or implementation details.
- [kluster.ai cookbook](https://github.com/kluster-ai/klusterai-cookbook): This repository is a collection of guides and examples designed to help developers unlock the full potential of kluster.ai.
- [Verify Guardrail Validator](https://github.com/kluster-ai/verify-guardrails-validator): This validator detects hallucinations in AI-generated content using kluster.ai's Verify API. The service can evaluate the AI response based on a given context, which makes it great for RAG applications. Without providing a specific context, the service can also be used as a real-time reliability verification service. Verify is able to identify when AI responses contain fabricated or inaccurate information.

